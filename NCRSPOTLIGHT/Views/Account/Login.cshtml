@model LoginViewModel
@using EntitiesLayer.Models.ViewModels
@using Microsoft.AspNetCore.Identity
@inject SignInManager<ApplicationUser> signInManager


<div class="wrapper-12-cols">
    <div class="left-panel">
        <h1 class="text-center pt-2"> Login</h1>
        <form method="post" asp-controller="Account" asp-action="Login" asp-route-returnurl="@ViewData["ReturnUrl"]">
            <div >
                <div asp-validation-summary="All" class="text-danger"></div>

                <div class="form-group pt-2">
                    <label asp-for="Email" class="col-12"></label>
                    <div class="col-md-12">
                        <input asp-for="Email" class="form-control" />
                        <span asp-validation-for="Email" class="text-danger"></span>
                    </div>
                </div>

                <div class="form-group pt-2">
                    <label asp-for="Password" class="col-12"></label>
                    <div class="col-md-12">
                        <input asp-for="Password" class="form-control" />
                        <span asp-validation-for="Password" class="text-danger"></span>
                    </div>
                </div>
                <div class="form-group pt-2">
                    <div class="col-md-12">
                        <div class="custom-checkbox">
                            <label asp-for="RememberMe" class="col-12">
                                <input asp-for="RememberMe" />
                                Remeber Me
                            </label>
                        </div>
                    </div>
                </div>
                    <div class="row-menu pt-3">

                            <button class="btn btn-primary login">Login</button>
                            <a asp-action="ForgotPassword"> Forgot Password?</a>
                    </div>
            </div>
        </form>

        <div class="loginOptions pt-3">
            <form method="post" asp-action="Login">
                <input type="hidden" name="returnUrl" value="@ViewData["ReturnUrl"]" />
                <div class="row-menu-outline">
                    <button class="btn btn-outline-danger" type="submit" name="email" value="admin@email.com">Admin</button>
                    <button class="btn btn-outline-secondary" type="submit" name="email" value="qa@email.com">QualityAssurance</button>
                    <button class="btn btn-outline-secondary" type="submit" name="email" value="basic@email.com">Basic</button>
                    <button class="btn btn-outline-secondary" type="submit" name="email" value="engineer@email.com">Engineer</button>
                    <button class="btn btn-danger" type="submit" name="email" value="superAdmin@email.com">SuperAdmin</button>
                </div>
            </form>
            @{
                var schemes = await signInManager.GetExternalAuthenticationSchemesAsync();
                var loginProviders = schemes.ToList();
            }

            @if (loginProviders.Count() > 0)
            {
                <div class="externalLogin">
                    <hr />
                    <div class="text-center pt-3">
                        <section class="ex-Login">
                            <p>Register with</p>
                            <form asp-controller="Account" asp-action="ExternalLogin" asp-route-returnUrl="@ViewData["ReturnUrl"]" method="post"
                                  role="form">
                                <div>
                                    <p>
                                        @foreach (var provider in loginProviders)
                                        {
                                            <button type="submit" class="btn btn-primary" name="provider"
                                                    value="@provider.Name">
                                                @provider.DisplayName
                                            </button>
                                        }
                                    </p>
                                </div>

                            </form>
                        </section>
                    </div>
                </div>
            }
        </div>
    </div>    
    <div class="right-panel">

    </div>
    


</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}